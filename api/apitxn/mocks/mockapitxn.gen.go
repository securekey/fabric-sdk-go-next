// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hyperledger/fabric-sdk-go/api/apitxn (interfaces: ProposalProcessor)

package mock_apitxn

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apitxn "github.com/hyperledger/fabric-sdk-go/api/apitxn"
)

// MockProposalProcessor is a mock of ProposalProcessor interface
type MockProposalProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockProposalProcessorMockRecorder
}

// MockProposalProcessorMockRecorder is the mock recorder for MockProposalProcessor
type MockProposalProcessorMockRecorder struct {
	mock *MockProposalProcessor
}

// NewMockProposalProcessor creates a new mock instance
func NewMockProposalProcessor(ctrl *gomock.Controller) *MockProposalProcessor {
	mock := &MockProposalProcessor{ctrl: ctrl}
	mock.recorder = &MockProposalProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockProposalProcessor) EXPECT() *MockProposalProcessorMockRecorder {
	return _m.recorder
}

// ProcessTransactionProposal mocks base method
func (_m *MockProposalProcessor) ProcessTransactionProposal(_param0 apitxn.TransactionProposal) (apitxn.TransactionProposalResult, error) {
	ret := _m.ctrl.Call(_m, "ProcessTransactionProposal", _param0)
	ret0, _ := ret[0].(apitxn.TransactionProposalResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessTransactionProposal indicates an expected call of ProcessTransactionProposal
func (_mr *MockProposalProcessorMockRecorder) ProcessTransactionProposal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ProcessTransactionProposal", reflect.TypeOf((*MockProposalProcessor)(nil).ProcessTransactionProposal), arg0)
}
